// <auto-generated />
using DataApp.ContextDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataApp.Migrations
{
    [DbContext(typeof(EducationDbContext))]
    [Migration("20240614013116_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataApp.Models.DualDegreeScore", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EducationDataKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("EducationDataKey");

                    b.ToTable("DualDegreeScores");
                });

            modelBuilder.Entity("DataApp.Models.EducationData", b =>
                {
                    b.Property<string>("SBD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CurrentYear")
                        .HasColumnType("int");

                    b.Property<decimal>("DiemAnh")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DiemToan")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("DiemVan")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("MaHS")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ThongTinDiem")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("SBD");

                    b.ToTable("EducationDatas");
                });

            modelBuilder.Entity("DataApp.Models.SpecializedScore", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EducationDataKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("EducationDataKey");

                    b.ToTable("SpecializedScores");
                });

            modelBuilder.Entity("DataApp.Models.DualDegreeScore", b =>
                {
                    b.HasOne("DataApp.Models.EducationData", "EducationData")
                        .WithMany("DualDegreeScores")
                        .HasForeignKey("EducationDataKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationData");
                });

            modelBuilder.Entity("DataApp.Models.SpecializedScore", b =>
                {
                    b.HasOne("DataApp.Models.EducationData", "EducationData")
                        .WithMany("SpecializedScores")
                        .HasForeignKey("EducationDataKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationData");
                });

            modelBuilder.Entity("DataApp.Models.EducationData", b =>
                {
                    b.Navigation("DualDegreeScores");

                    b.Navigation("SpecializedScores");
                });
#pragma warning restore 612, 618
        }
    }
}
